% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/infomap.R
\name{infomap}
\alias{infomap}
\title{Infomap community finding}
\usage{
infomap(
  net,
  weight = TRUE,
  bipartite = FALSE,
  nbmod = 0,
  markovtime = 1,
  seed = 1,
  twolevel = FALSE,
  directed = FALSE,
  delete_temp = TRUE,
  path_temp = "infomap_temp",
  binpath = NULL
)
}
\arguments{
\item{net}{a two- or three-column \code{data.frame} representing a network with the two first columns
as (un)directed links between pair of nodes and an optional third column indicating the weight of the link}

\item{weight}{a boolean indicating if the weights should be considered if there is a third column}

\item{bipartite}{a boolean indicating if the network is bipartite (see Details)}

\item{nbmod}{penalize solutions the more they differ from this number (0 by default for no preferred number of modules)}

\item{markovtime}{scales link flow to change the cost of moving between modules, higher values results
in fewer modules (default is 1)}

\item{seed}{for the random number generator}

\item{twolevel}{a boolean indicating if the algorithm should optimize a two-level partition of the network
(default is multi-level)}

\item{directed}{a boolean indicating if the network is directed (from column 1 to column 2)}

\item{delete_temp}{a boolean indicating if the temporary folder should be removed (see Details)}

\item{path_temp}{a string indicating the path to the temporary folder (see Details)}

\item{binpath}{a string indicating the path to the bin folder (see \link{bin} and Details)}
}
\value{
A \code{data.frame} providing one partition by hierarchical level.
}
\description{
This function finds communities in a (un)weighted (un)directed network based on the Infomap algorithm
(\url{https://github.com/mapequation/infomap}, version 1.6.0).
}
\details{
Infomap is a network clustering algorithm based on the Map equation proposed in
\insertCite{Rosvall2008}{bioRgeo} that finds communities in (un)weighted and (un)directed networks.
Infomap has two ways to deal with bipartite networks. The first possibility is to consider the bipartite network
as unipartite network. The second possibility is to set the \code{bipartite} argument to TRUE in order to
approximate a two-step random walker (see \url{https://www.mapequation.org/infomap/} for more information).

This function is based on the 1.6.0 C++ version of Infomap (\url{https://github.com/mapequation/infomap/releases}).
This function needs executables files to run. They can be installed with \link{bin}. If you set the path to
the folder that will host the bin folder  manually while running \link{bin} please make sure to set \code{binpath}
accordingly.

The C++ version of Infomap generates temporary folders and/or files that are stored in the \code{path_temp} folder
(folder "infomap_temp" in the workind directory by default). This temporary folder is removed by default
(\code{delete_temp = TRUE}).
}
\examples{
comat=matrix(sample(1000,50),5,10)
rownames(comat)=paste0("Site",1:5)
colnames(comat)=paste0("Species",1:10)

net=spproject(comat,metric="Simpson")
#com=infomap(net) # run bin() to use this function
}
\references{
\insertRef{Rosvall2008}{bioRgeo}
}
\seealso{
\link{louvain}, \link{oslom}
}
\author{
Pierre Denelle (\email{pierre.denelle@gmail.com}),
Maxime Lenormand (\email{maxime.lenormand@inrae.fr}) and
Boris Leroy (\email{leroy.boris@gmail.com})
}
