% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cut_tree.R
\name{cut_tree}
\alias{cut_tree}
\title{Cut a hierarchical tree}
\usage{
cut_tree(
  tree,
  n_clust = NULL,
  cut_height = NULL,
  find_h = TRUE,
  h_max = 1,
  h_min = 0
)
}
\arguments{
\item{tree}{a \code{bioRgeo.hierar.tree} or a \code{hclust} object}

\item{n_clust}{an integer indicating the number of clusters to be obtained
from the hierarchical tree. Should not be used at the same time as
\code{cut_height}}

\item{cut_height}{a numeric vector indicating the height(s) at which the tree
should be cut. Should not be used at the same time as \code{n_clust} or
\code{optim_method}}

\item{find_h}{a boolean indicating if the height of cut should be found for
the requested \code{n_clust}}

\item{h_max}{a numeric indicating the maximum possible tree height for
finding the height of cut when \code{find_h = TRUE}}

\item{h_min}{a numeric indicating the minimum possible height in the tree for
finding the height of cut when \code{find_h = TRUE}}
}
\value{
If \code{tree} is a \code{bioRgeo.hierar.tree}, then the same object
is returned with content updated (i.e., \code{args} and \code{clusters}). If
\code{tree} is a \code{hclust} object, then a \code{data.frame} containing
the clusters is returned.
}
\description{
This functions is designed to work on both \code{hclust} objects and
\code{bioRgeo.hierar.tree} objects. It cuts the tree for the chosen number(s)
of clusters or selected height(s). It also includes a procedure to
automatically return the height of cut for the chosen number(s) of clusters.
}
\details{
Specify \code{n_clust} or \code{cut_height}, but not both at the same time.
}
\examples{
comat <- matrix(sample(0:1000, size = 500, replace = TRUE, prob = 1/1:1001), 20, 25)
rownames(comat) <- paste0("Site",1:20)
colnames(comat) <- paste0("Species",1:25)

simil <- spproject(comat, metric = "all")
distances <- similarity_to_distance(simil)

# User-defined number of clusters
tree1 <- clustering_hierarchical(distances,
                                 n_clust = 5)
tree1
tree1

tree2 <- cut_tree(distances,
                  cut_height = .05)
tree2
tree2$clusters

hclust_tree <- tree2$final.tree
clusters_2 <- cut_tree(hclust_tree,
                       n_clust = 10)
}
\seealso{
\link{clustering_hierarchical}
}
\author{
Pierre Denelle (\email{pierre.denelle@gmail.com}),
Maxime Lenormand (\email{maxime.lenormand@inrae.fr}) and
Boris Leroy (\email{leroy.boris@gmail.com})
}
