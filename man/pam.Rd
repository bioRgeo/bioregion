% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pam.R
\name{pam}
\alias{pam}
\title{Non hierarchical clustering: partitioning around medoids}
\usage{
pam(
  distances,
  index = names(distances)[3],
  n_clust = NULL,
  nstart = 10,
  variant = "faster",
  cluster_only = FALSE
)
}
\arguments{
\item{distances}{the output object from \code{\link{similarity_to_distance}},
a \code{data.frame} with the first columns called "Site1" and "Site2", and
the other columns being the distance indices or a \code{dist} object}

\item{index}{a \code{character} string providing the name of the distance
index to use, corresponding to the column
name in \code{distances}. By default, the third column name of
 \code{distances} is used.}

\item{n_clust}{an \code{integer} specifying the requested number of cluster for pam
and kmeans.}

\item{method}{a \code{character} vector specifying the methods to use. Available
methods: "pam", "kmeans", "dbscan", "optics", "mclust". Default is "pam".
Specifying "all" will run all clustering methods.}

\item{find_nclust_method}{if n_clust is NULL, specificies the method to be
used to find the optimal number of clusters?  ##################################### TO BE IMPLEMENTED}

\item{pam_variant}{a \code{character} string specifying the variant of pam
to use, by default "faster". See \link[cluster:pam]{cluster::pam()} for
more details}

\item{pam_nstart}{an \code{integer} specifying the number of random “starts”
for the pam algorithm. By default, 1 (for the \code{"faster"} variant)}

\item{pam_cluster_only}{a \code{boolean} specifying if only the clustering
should be returned from the \link[cluster:pam]{cluster::pam()} function
(more efficient)}

\item{kmeans_iter_max}{an \code{integer} specifying the maximum number of
iterations for the kmeans method (see \link[stats:kmeans]{stats::kmeans()})}

\item{kmeans_nstart}{an \code{integer} specifying how many random sets of
\code{n_clust} should be selected as starting points for the kmeans analysis
(see \link[stats:kmeans]{stats::kmeans()})}

\item{optics_xi}{a \code{numeric} value specifying}
}
\value{
to fill
}
\description{
This function performs non hierarchical
clustering on the basis of distances with partioning around medoids.
}
\details{
This method partitions data into
 the chosen number of cluster on the basis of the input distance matrix.
 It is more robust than k-means because it minimizes the sum of distances
 between cluster centres and points assigned to the cluster -
 whereas the k-means approach minimizes the sum of squared euclidean
 distances (thus k-means cannot be applied directly on the input distance
 matrix if the distances are not euclidean).
}
\examples{
simil <- similarity(vegemat, metric = "all")
distances <- similarity_to_distance(simil)

clust1 <- pam(distances,
    n_clust = 5,
    index = "Simpson")
clust2 <- pam(distances,
    n_clust = 2:25,
    index = "Simpson")
partition_metrics(clust2,
                  distances = distances,
                  eval_metric = "pc_distance",
                  partition_optimisation = TRUE)
partition_metrics(clust2,
                  sp_site_table = vegemat,
                  eval_metric = "avg_endemism",
                  partition_optimisation = TRUE)
}
